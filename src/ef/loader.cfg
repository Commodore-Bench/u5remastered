FEATURES {
    STARTADDRESS:    default = $2000;
}

SYMBOLS {
    __LOADADDR__:  type = import;
    __STACKSIZE__: type = weak, value = $0800; # 1k stack
    __HIMEM__:     type = weak, value = $D000;
}

MEMORY {
    ZP:       file = "", define = yes, start = $0002,           size = $001A;
    LOADADDR: file = %O,               start = %S - 2,          size = $0002;
    MAIN:     file = %O, define = yes, start = $2000,           size = $2000;
    BSS:      file = "",               start = $5000,           size = $1000;

    PRTYDATA:    start = $bc00,  size = $30, file = "";
    ROSTER:      start = $1000,  size = $0400,  file = "";
    LIST:        start = $4a00,  size = $0200,  file = "";
    SLIST:       start = $7c00,  size = $0200,  file = "";
    IO_DATA:     start = $df00,  size = $80,  fill = no;
}

SEGMENTS {
    ZEROPAGE: load = ZP,       type = zp;
    LOADADDR: load = LOADADDR, type = ro;
    STARTUP:  load = MAIN,     type = ro,  start = $2000;
    LOWCODE:  load = MAIN,     type = ro,  optional = yes;
    CODE:     load = MAIN,     type = ro;
    RODATA:   load = MAIN,     type = ro;
    DATA:     load = MAIN,     type = rw;
    INIT:     load = MAIN,     type = rw;
    ONCE:     load = MAIN,     type = ro,  define   = yes;
    BSS:      load = BSS,      type = bss, define   = yes;

    HEAP:     load = BSS,      type = bss, optional = yes;

    LOADER:      load = MAIN,  type = rw;
    IO_DATA:     load = IO_DATA,  type = bss;
    IO_CODE:     load = MAIN,  type = rw;
    IO_CODE2:    load = MAIN,  type = rw;
    EXO_CODE:    load = MAIN,  type = rw;
    LOADSAVEGAME: load = MAIN, type = rw;
}

FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
